module increment (clk, reset, in, hex, out);
	input logic clk, reset, in;
	output logic out
	output logic [3:0] hex;
	logic [3:0] counter;

	// Output logic
	assign hex = counter;
	assign out = ((counter == 4'b1001) & in);
	
	// DFFs
	always_ff @(posedge clk) begin
		if (reset | ((counter == 4'b1001) & in ))
			counter <= 4'b0000;
		else if (in)
			counter <= counter + 4'b0001; 
		else
			counter <= counter; 
	end
	
endmodule 