module counter2 (clk, reset, enable);
   input  logic clk, reset;
	output logic enable;
	logic [10:0] counter;
	
	always_ff @(posedge clk) begin
		if (reset)
			counter <= 11'b00000000000;
		else
			counter <= counter + 11'b00000000001; 
	end
		
	assign enable = (counter == 11'b00000000000);
endmodule

module counter1_testbench();
	logic clk, enable, reset;
	
	counter1 dut (.clk, .reset, .enable);
	
	// Setup the test clock
	parameter CLOCK_PERIOD=100;
	initial begin
		clk <= 0;
		forever #(CLOCK_PERIOD/2) clk <= ~clk;
	end
	
	initial begin
		 reset <= 1; @(posedge clk);
		 reset <= 0; @(posedge clk);
			 repeat(10000) @(posedge clk);
		$stop;
	end
	
endmodule
	
	
	