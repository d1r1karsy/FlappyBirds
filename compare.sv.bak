module compare (clk, reset, A, B, out);
	input logic clk, reset; 
	input logic [9:0] A, B;
	output logic out;
	
	always @(posedge clk) begin
		if(reset)
			number <= 10'b0000000000;
		else	begin
			number[8:0] <= number[9:1];
			number[9] <= (number[0] & number[3]) | (~number[0] & ~number[3]);
			end
		end

endmodule